#include <iostream>
#include <string>
#include <vector>
#include <cstdlib>
#include <ctime>

using namespace std;

int RollDie(int sides = 6, int min = 1) {

    return rand() % sides + min;                //The rand() function in C++ generates a pseudo-random integer                                                      between 0 and RAND_MAX, with RAND_MAX being a constant defined in                                                   the <cstdlib> header. By using the modulo operator %, we ensure                                                     that the random number falls within the range of 0 to sides - 1.
}

string askYesNo(string question) {

    string answer;

    cout << question << " (yes/no): ";

    cin >> answer;
    return answer;
}

int main() {

    srand(time(0));        //srand(time(0)); is setting the seed of the random number generator to the current                                 time, ensuring that the random numbers generated by the program are different each time                             the program is run.

    int health = 10;
    int gold = 0;
    int turns = 0;
    bool alive = true;        //bool is the data type indicating that the variable alive can hold Boolean                                         (true/false) values.
                              //alive is the name of the variable defined here.
                              //true initializes the alive variable to true, indicating that the player is                                        initially alive at the beginning of the game.

    do {

        string answer = askYesNo("Do you want to go adventuring?");

        if (answer != "yes") {

            break;

        }

        int attack = RollDie();
        int block = RollDie();
        if (block >= attack) {

            cout << "You have successfully blocked the orc's attack and escaped! You lost 1 health point and found some gold.\n";

            health--;              //the code health--; decreases the player's health by 1 when they fail                                              //to block the orc's attack during the adventure.

            gold += RollDie(10);   //this line of code adds a random amount of gold (between 1 and 10) to the                                          //player's total gold based on the result of rolling a 10-sided die.

        } else {

            health -= attack;     //The health -= attack; line in the program reduces the player's health points by                                   //the amount of damage dealt by the orc during the combat encounter.

            cout << "You failed to block the orc's attack! You lost " << attack << " health points and found no gold.\n";
        }

        turns++;

        if (health <= 0) {            //if (health <= 0): This condition checks if the player's health is less than                                       or equal to 0. If the player's health has reached 0 or below, the following                                         actions will be taken.
            
            alive = false;            //alive = false;: This line sets the boolean variable alive to false,                                               indicating that the player is no longer alive. 
            
            break;                    // break;: The break statement is used to immediately exit the loop (in this                                        case, a do-while loop) in which this if condition is nested. It breaks out of                                       the loop and continues executing the code after the loop.
            
                                      // When the player's health reaches 0 or below, the player is                                                       considered dead (alive = false) and the program breaks out of the loop to                                           continue with the remaining logic, like displaying the outcome of the                                               adventure.
        }
    } 
        while (true);

    if (alive) {

        cout << "You are still alive after " << turns << " turns! You found " << gold << " gold.\n";

        if (health < 5) {

            cout << "Your health is low. You should go to the doctor.\n";

        }
    } 
    else {

            cout << "You have died! You found " << gold << " gold by your body.\n";
    }

    return 0;
}